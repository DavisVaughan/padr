% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pad.R
\name{pad}
\alias{pad}
\title{Pad the dateteime column of a data frame or a datetime vector}
\usage{
pad(x, interval = NULL, start_val = NULL, end_val = NULL, by = NULL)
}
\arguments{
\item{x}{A data frame containing at least one variable of class \code{Date}
or of class \class{POSIXt}.}

\item{interval}{The interval of the returned datetime variable. When NULL the
the interval will be equal to the interval of the input data and will be obtained
by applying \code{get_interval}. If specified it can only be lower than the
interval of the input data.}

\item{start_val}{An object of class \code{Date} or class \class{POSIXt} that
specifies the start of returned datatime variable. If NULL it will use the
lowest value of the input variable. See Details.}

\item{end_val}{An object of class \code{Date} or class \class{POSIXt} that
specifies the end of returned datatime variable. If NULL it will use the
highest value of the input variable.}

\item{by}{Only needs to be specified when \code{x} contains multiple
variables of class \code{Date} or of class \class{POSIXt}. \code{by}
indicates which to use for padding.}
}
\value{
\code{x} with the datetime variable padded. All other variables will
have missing values at the rows that are padded.
}
\description{
Pad will fill the gaps in incomplete datetime variables, by figuring out
what the interval of the data is and what instances are missing. For all
other variables a missing value will be insterted.
}
\details{
The interval of a datetime variable is the time unit at which the
observations occur. \code{pad} allows for eight different time units which
are from high to low \code{year}, \code{quarter}, \code{month}, \code{week},
\code{day}, \code{hour}, \code{min}, \code{sec}. \code{pad} will figure out
the interval of the input data and will fill the gaps for the instances that
would be expected from the interval but are missing from the input data. See
the vignette for the default behavior of \code{pad}.
}
\examples{
simple_df <- data.frame(day = as.Date(c('2016-04-01', '2016-04-03')),
                        some_value = c(3,4))
pad(simple_df)

library(dplyr)
month <- seq(as.Date('2016-04-01'), as.Date('2017-04-01'),
              by = 'month')[c(1, 4, 5, 7, 9, 10, 13)]
month_df <- data.frame(month = month,
                       y = runif(length(month), 10, 20) \%>\% round)
# forward fill the padded values with tidyr's fill
month_df \%>\% pad \%>\% tidyr::fill(y)
# or fill it all with 0
month_df \%>\% pad \%>\% fill_by_value(y)

# padding a data.frame on group level
day_var <- seq(as.Date('2016-01-01'), length.out = 12, by = 'month')
x_df_grp <- data.frame(grp  = rep(LETTERS[1:3], each =4),
                       y    = runif(12, 10, 20) \%>\% round(0),
                       date = sample(day_var, 12, TRUE)) \%>\%
 arrange(grp, date)

x_df_grp \%>\% group_by(grp) \%>\% do(pad(.)) \%>\% ungroup \%>\%
tidyr::fill(grp)
}

