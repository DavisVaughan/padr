% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pad.R
\name{pad}
\alias{pad}
\title{Pad the dateteime column of a data frame or a datetime vector}
\usage{
pad(x, pulse = NULL, start_val = NULL, end_val = NULL, by = NULL)
}
\arguments{
\item{x}{Either a data frame containing at least one datetime variable or
an object of class \code{Date} or class \class{POSIXt}.}

\item{pulse}{The pulse of the returned datetime variable. When NULL the
the pulse will be equal to the pulse of the input data and will be obtained
by applying \code{get_pulse}. If specified it can only be lower than the
pulse of the input data.}

\item{start_val}{An object of class \code{Date} or class \class{POSIXt} that
specifies the start of returned datatime variable. If NULL it will use the
lowest value of the input variable. See Details.}

\item{end_val}{An object of class \code{Date} or class \class{POSIXt} that
specifies the end of returned datatime variable. If NULL it will use the
highest value of the input variable.}

\item{by}{Only needs to be specified when x is a data frame containing
multiple variables that are eligable for padding. \code{by} indicates which
to use for padding.}
}
\value{
If \code{x} is a data frame it the return will be the same data frame
with rows inserted where the datetime variable is padded. All other values
at the inserted rows will be NA. If \code{x} is an object of class
\code{Date} or class \class{POSIXt}, the return will be the padded \code{x}.
}
\description{
Pad will fill the gaps in incomplete datetime variables, by figuring out
what the pulse of the data is and what instances are missing.
}
\details{
The pulse of a datetime variable is the time unit at which the
observations occur. \code{pad} allows for eight different time units which
are from high to low \code{year}, \code{quarter}, \code{month}, \code{week},
\code{day}, \code{hour}, \code{min}, \code{sec}. \code{pad} will figure out
the pulse of the input data and will fill the gaps for the instances that
would be expected from the pulse but are missing from the input data. See
the vignette for the default behavior of \code{pad}.
}
\examples{
x_var <- seq(as.Date('2016-04-01'), as.Date('2017-04-01'), by = 'month')
x_var_incomplete <- x_var[c(1, 4, 5, 7, 9, 10, 13)]
all.equal(x_var, pad(x_var_incomplete))
# use a different pulse than the one of the data itself
pad(x_var_incomplete, pulse = 'day')

library(dplyr)
x_df <- data.frame(x_var = x_var_incomplete,
                   y     = runif(length(x_var_incomplete), 10, 20) \%>\% round(0))
# forward fill the padded values with tidyr's fill
x_df \%>\% pad \%>\% tidyr::fill(y)
# TODO show an example of fill_by_value

# padding a data.frame on group level
x_df_grp <- data.frame(grp  = rep(LETTERS[1:3], each =4),
                       y    = runif(12, 10, 20) \%>\% round(0),
                       date = sample(x_var, 12, TRUE)) \%>\%
 dplyr::arrange(grp, date)

x_df_grp \%>\% dplyr::group_by(grp) \%>\% dplyr::do(pad(.)) \%>\% dplyr::ungroup \%>\%
tidyr::fill(grp)
}

